/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package SubVentanas;

//import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author Nicolas
 */
public class frmIngresoSinReserva extends javax.swing.JPanel {

    /**
     * Creates new form frmIngresoSinReserva
     */
    public frmIngresoSinReserva() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldCedulaClienteSinReserva = new javax.swing.JTextField();
        jLabelNumHabSinReserva = new javax.swing.JLabel();
        jTextFieldNumHabSinReserva = new javax.swing.JTextField();
        jLabelSinReserva_AVISO = new javax.swing.JLabel();
        jLabelNumNochesSinReserva = new javax.swing.JLabel();
        jTextFieldNumNochesSinReserva = new javax.swing.JTextField();
        jButtonINGRESAR_SIN_RESERVA = new javax.swing.JButton();
        jTextFieldFechaIngresoSinReserva = new javax.swing.JTextField();
        jLabelCedulaIngresoSinReserva = new javax.swing.JLabel();
        jLabelFechaIngresoSinReserva = new javax.swing.JLabel();
        jButtonAtras = new javax.swing.JButton();
        txtingresoHabitacion = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabelNumHabSinReserva.setBackground(new java.awt.Color(255, 255, 255));
        jLabelNumHabSinReserva.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabelNumHabSinReserva.setText("NUM_HAB");

        jLabelSinReserva_AVISO.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabelSinReserva_AVISO.setText("SIN RESERVA");

        jLabelNumNochesSinReserva.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabelNumNochesSinReserva.setText("NUM_NOCHES");

        jButtonINGRESAR_SIN_RESERVA.setBackground(new java.awt.Color(204, 204, 255));
        jButtonINGRESAR_SIN_RESERVA.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jButtonINGRESAR_SIN_RESERVA.setText("INGRESAR SIN RESERVA");
        jButtonINGRESAR_SIN_RESERVA.setBorder(null);
        jButtonINGRESAR_SIN_RESERVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ReservarActionPerformed(evt);
            }
        });

        jLabelCedulaIngresoSinReserva.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabelCedulaIngresoSinReserva.setText("CEDULA ");

        jLabelFechaIngresoSinReserva.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabelFechaIngresoSinReserva.setText("FECHA DE INGRESO");

        jButtonAtras.setBackground(new java.awt.Color(204, 204, 255));
        jButtonAtras.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jButtonAtras.setText("ATRAS");
        jButtonAtras.setBorder(null);
        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });

        txtingresoHabitacion.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        txtingresoHabitacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtingresoHabitacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagene/favicon.png"))); // NOI18N
        txtingresoHabitacion.setText("INGRESO HABITACION SIN RESERVA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelCedulaIngresoSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jTextFieldCedulaClienteSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelNumNochesSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jTextFieldNumNochesSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelSinReserva_AVISO, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelFechaIngresoSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNumHabSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNumHabSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldFechaIngresoSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButtonINGRESAR_SIN_RESERVA, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtingresoHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(txtingresoHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelSinReserva_AVISO, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCedulaIngresoSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCedulaClienteSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldFechaIngresoSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFechaIngresoSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNumNochesSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumNochesSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNumHabSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumHabSinReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonINGRESAR_SIN_RESERVA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold> 

    private void jButton_ReservarActionPerformed(java.awt.event.ActionEvent evt) {
        int cedula = Integer.parseInt(jTextFieldCedulaClienteSinReserva.getText());
        Date fechaIngreso = Date.valueOf(jTextFieldFechaIngresoSinReserva.getText()); // Convertir a java.sql.Date
        int numDias = Integer.parseInt(jTextFieldNumNochesSinReserva.getText());
        int numHab = Integer.parseInt(jTextFieldNumHabSinReserva.getText());
        Date fechaSalida = Date.valueOf(fechaIngreso.toLocalDate().plusDays(numDias).toString());

        // Verificar si el cliente existe en la base de datos
        if (!clienteExiste(cedula)) {
            javax.swing.JOptionPane.showMessageDialog(this, "El cliente no existe en la base de datos. Primero debe ingresar el cliente.");
            return;
        }

        // Verificar si la habitación está disponible en el intervalo de fechas
        if (!habitacionDisponible(numHab, fechaIngreso, fechaSalida)) {
            javax.swing.JOptionPane.showMessageDialog(this, "La habitación no está disponible para las fechas seleccionadas.");
            return;
        }

        try {
            int codigoReserva = insertarReserva(cedula, fechaIngreso, numDias, numHab);
            actualizarEstadoHabitacion(numHab); // Actualizar el estado de la habitación a "Reservada"
            javax.swing.JOptionPane.showMessageDialog(this, "Reserva ingresada correctamente. Código de reserva: " + codigoReserva);
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al ingresar la reserva: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean clienteExiste(int cedula) {
        String url = "jdbc:postgresql://localhost:5432/ProyectoFinal";
        String user = "postgres";
        String password = "Nicolas1118";
        String sql = "SELECT * FROM cliente WHERE cedula = ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, cedula);
            try (ResultSet rs = pstmt.executeQuery()) {
                return rs.next(); // Devuelve true si hay resultados (cliente encontrado), false si no hay resultados
            }
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al verificar cliente: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private boolean habitacionDisponible(int numHab, Date fechaIngreso, Date fechaSalida) {
        String url = "jdbc:postgresql://localhost:5432/ProyectoFinal";
        String user = "postgres";
        String password = "Nicolas1118";
        String sql = "SELECT fecha_entrada, (fecha_entrada + (num_dias || ' days')::INTERVAL)::DATE AS fecha_salida FROM reserva WHERE num_hab = ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, numHab);
            try (ResultSet rs = pstmt.executeQuery()) {
                while (rs.next()) {
                    Date fechaEntradaExistente = rs.getDate("fecha_entrada");
                    Date fechaSalidaExistente = rs.getDate("fecha_salida");

                    // Verificar si las fechas se solapan
                    if (fechaIngreso.before(fechaSalidaExistente) && fechaSalida.after(fechaEntradaExistente)) {
                        return false;
                    }
                }
            }
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al verificar habitación: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private int insertarReserva(int cedula, Date fechaIngreso, int numDias, int numHab) throws SQLException {
        String url = "jdbc:postgresql://localhost:5432/ProyectoFinal";
        String user = "postgres";
        String password = "Nicolas1118";
        String sql = "INSERT INTO reserva (codigo_reserva, cod_c, fecha_entrada, num_dias, num_hab) VALUES (?, ?, ?, ?, ?)";

        int codigoReserva = generarCodigoReserva(); // Generar código de reserva

        try (Connection conn = DriverManager.getConnection(url, user, password);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, codigoReserva);
            pstmt.setInt(2, cedula);
            pstmt.setDate(3, fechaIngreso);
            pstmt.setInt(4, numDias);
            pstmt.setInt(5, numHab);
            pstmt.executeUpdate();

        }

        return codigoReserva;
    }

    private int generarCodigoReserva() throws SQLException {
        String url = "jdbc:postgresql://localhost:5432/ProyectoFinal";
        String user = "postgres";
        String password = "Nicolas1118";
        String sql = "SELECT MAX(codigo_reserva) AS max_codigo_reserva FROM reserva";

        int siguienteCodigo = 1; // Valor por defecto si no hay reservas en la base de datos

        try (Connection conn = DriverManager.getConnection(url, user, password);
             PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {

            if (rs.next()) {
                siguienteCodigo = rs.getInt("max_codigo_reserva") + 1;
            }
        }

        return siguienteCodigo;
    }

    private void actualizarEstadoHabitacion(int numHab) throws SQLException {
        String url = "jdbc:postgresql://localhost:5432/ProyectoFinal";
        String user = "postgres";
        String password = "Nicolas1118";
        String sql = "UPDATE habitacion SET estado = 'Ocupada' WHERE num_hab = ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, numHab);
            pstmt.executeUpdate();
        }
    }

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {
        JFrame Recepcionista = new JFrame("Recepcionista");
        Recepcionista.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Recepcionista.add(new frmDireccionIngreso());
        Recepcionista.pack();
        Recepcionista.setLocationRelativeTo(null);
        Recepcionista.setVisible(true);
        SwingUtilities.getWindowAncestor(this).dispose();
    }   

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JButton jButtonINGRESAR_SIN_RESERVA;
    private javax.swing.JLabel jLabelCedulaIngresoSinReserva;
    private javax.swing.JLabel jLabelFechaIngresoSinReserva;
    private javax.swing.JLabel jLabelNumHabSinReserva;
    private javax.swing.JLabel jLabelNumNochesSinReserva;
    private javax.swing.JLabel jLabelSinReserva_AVISO;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldCedulaClienteSinReserva;
    private javax.swing.JTextField jTextFieldFechaIngresoSinReserva;
    private javax.swing.JTextField jTextFieldNumHabSinReserva;
    private javax.swing.JTextField jTextFieldNumNochesSinReserva;
    private javax.swing.JLabel txtingresoHabitacion;
    // End of variables declaration                   
}
